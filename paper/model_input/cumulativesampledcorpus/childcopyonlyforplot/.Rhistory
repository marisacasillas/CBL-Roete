speechrate.utt.data$rate_noF0prune <- speechrate.utt.data$syllable_count_noF0prune / speechrate.utt.data$utt_duration
# Descriptive statistics over all utterances; average speech rate and sd, per child per age
speechrate.utt.data$child <- substring(speechrate.utt.data$filename, 4,5)
speechrate.utt.data$age <- substring(speechrate.utt.data$filename, 1,2)
speechrate.utt.data$count <- 1
speechrate.utt.data$segment <- substring(speechrate.utt.data$filename,7,14)
total_speech <- aggregate(speechrate.utt.data$utt_duration, by = c(list(child = speechrate.utt.data$child), list(age=speechrate.utt.data$age), list(segment = speechrate.utt.data$segment)),FUN=sum)
mean_speechrate <- aggregate(speechrate.utt.data$rate, by = c(list(child = speechrate.utt.data$child),list(age=speechrate.utt.data$age), list(segment = speechrate.utt.data$segment)),FUN=mean)
sd_speechrate <- aggregate(speechrate.utt.data$rate, by = c(list(child = speechrate.utt.data$child),list(age=speechrate.utt.data$age), list(segment = speechrate.utt.data$segment)),FUN=sd)
mean_speechrate_noF0prune <- aggregate(speechrate.utt.data$rate_noF0prune, by = c(list(child = speechrate.utt.data$child),list(age=speechrate.utt.data$age), list(segment = speechrate.utt.data$segment)),FUN=mean)
sd_speechrate_noF0prune <- aggregate(speechrate.utt.data$rate_noF0prune, by = c(list(child = speechrate.utt.data$child),list(age=speechrate.utt.data$age), list(segment = speechrate.utt.data$segment)),FUN=sd)
num_utterances <- aggregate(speechrate.utt.data$count, by = c(list(child = speechrate.utt.data$child),list(age=speechrate.utt.data$age), list(segment = speechrate.utt.data$segment)),FUN=sum)
average_utt <- aggregate(speechrate.utt.data$utt_duration, by = c(list(child = speechrate.utt.data$child), list(age=speechrate.utt.data$age), list(segment = speechrate.utt.data$segment)),FUN=mean)
sd_utt <-   aggregate(speechrate.utt.data$utt_duration, by = c(list(child = speechrate.utt.data$child), list(age=speechrate.utt.data$age), list(segment = speechrate.utt.data$segment)),FUN=sd)
speechrate.data <- merge(mean_speechrate, sd_speechrate,by=c("child","age", "segment"))
speechrate.data <- merge(speechrate.data,mean_speechrate_noF0prune,by=c("child","age","segment"))
speechrate.data <- merge(speechrate.data,sd_speechrate_noF0prune,by=c("child","age","segment"))
speechrate.data <- merge(speechrate.data,num_utterances,by=c("child","age","segment"))
speechrate.data <- merge(speechrate.data,total_speech,by=c("child","age","segment"))
speechrate.data <- merge(speechrate.data,average_utt,by=c("child","age","segment"))
speechrate.data <- merge(speechrate.data,sd_utt,by=c("child","age","segment"))
colnames(speechrate.data) <- c("child","age","segment","mean","sd","mean_noF0prune","sd_noF0prune","num_utt", "total_speech","average_utt","sd_utt")
#Preprocess: Identify and remove all children for which we don't have all 3 data points
for (c in c(1:56)){
# Adjusting participant numbers
if (c < 10){
i <- paste("0",toString(c), sep = '')
}else{
i <- c
}
temp <-speechrate.data[speechrate.data$child == i,1:7]
n_datapoints <- length(unique(temp$age))
if(n_datapoints < 3 | any(speechrate.data$num_utt[speechrate.data$child == i] < 10)){
speechrate.data <- subset(speechrate.data, child != i)
speechrate.utt.data <- subset(speechrate.utt.data, child != i)
}
}
n_segments <- nrow(speechrate.data)
n_segments_for_check <- ceiling(n_segments/10)
View(speechrate.data)
total_speech <- 0
temp <- speechrate.data$total_speech
temp
total_speech <- sum(temp)
total_speech
total_speech/60
total <- sum(speechrate.data$total_speech)
total_min <- total/60
agg.data <-aggregate(speechrate.data, by=list(total_speech),
FUN=sum, na.rm=TRUE)
agg.data <-aggregate(speechrate.data, by=list(total_speech),FUN=sum, na.rm=TRUE)
agg.data <-aggregate(speechrate.data, by=total_speech,FUN=sum, na.rm=TRUE)
agg.data <-aggregate(speechrate.data, by=c(total_speech),FUN=sum, na.rm=TRUE)
agg.data <-aggregate(speechrate.data, by=list(child,total_speech),FUN=sum, na.rm=TRUE)
agg.data <-aggregate(speechrate.data, by=list(speechrate.data$total_speech),FUN=sum, na.rm=TRUE)
agg.data <-aggregate(speechrate.data, by=list(speechrate.data$child,speechrate.data$total_speech),FUN=sum, na.rm=TRUE)
agg.data <-aggregate(speechrate.data, by=list(speechrate.data$child),FUN=sum, na.rm=TRUE)
agg.data <-aggregate(speechrate.data, by=list(speechrate.data$child),FUN=sum)
speechrate.data
speechrate.data$child
agg = aggregate(speechrate.data, by = list(speechrate.data$child), FUN = mean)
agg
agg = aggregate(speechrate.data, by = list(speechrate.data$child), FUN = sum)
agg.data <-aggregate(speechrate.data$total_speech, by=list(speechrate.data$child),FUN=sum)
agg.data
min(agg.data$total_speech)
min(agg.data$x)
min <- min(agg.data$x)/60
min
max <- max(agg.data$x)/60
agg.data$child
agg.data$Group.1
unique(speechrate.data$child)
length(unique(speechrate.data$child))
### Speech rate data analysis
# Set working directory and output directory, and plot details
library("dplyr")
library("lme4")
library("ggplot2")
library(grid)
library(gridExtra)
library(stringr)
library(jtools)
library(lattice)
library(lmerTest)
library(yarrr)
library(Hmisc)
#Plot layout settings
basic.theme <- theme(
panel.background = element_rect(
fill = "transparent",colour = NA),
panel.grid.major = element_line(colour = "grey95"),
panel.grid.minor = element_blank(),
plot.background = element_rect(
fill = "transparent",colour = NA),
legend.background = element_rect(
fill="transparent"),
legend.text = element_text(size=24),
legend.title = element_text(size=30),
legend.key.height = unit(2, "lines"),
legend.key = element_rect(colour = NA, fill = NA),
axis.text.x = element_text(size=30, angle=45, hjust=1),
axis.title.x = element_text(size=30),
axis.text.y = element_text(size=28),
axis.title.y = element_text(size=32),
strip.text = element_text(size=30),
panel.spacing = unit(2, "lines"))
# Read in speech rate data from files
#"~/Downloads/"  C:/Users/ingroe/Downloads/
data.path <- "/Volumes/ladd/workspaces/ld-ingroe/projects/speechrate_roete/03-raw_data/04-spreadsheets/"
plot.path <- "/Volumes/ladd/workspaces/ld-ingroe/projects/speechrate_roete/04-analysis/"
speechrate.files <- list.files(path=data.path, pattern="results.csv")
# Format data into dataframe-format
speechrate.utt.data <- do.call("rbind", lapply(speechrate.files, function(x) read.csv(paste(data.path,x, sep=''),
stringsAsFactors = FALSE)))
# Compute speech rate per utterance, with and without F0-pruning
speechrate.utt.data$rate <- speechrate.utt.data$syllable_count / speechrate.utt.data$utt_duration
speechrate.utt.data$rate_noF0prune <- speechrate.utt.data$syllable_count_noF0prune / speechrate.utt.data$utt_duration
# Descriptive statistics over all utterances; average speech rate and sd, per child per age
speechrate.utt.data$child <- substring(speechrate.utt.data$filename, 4,5)
speechrate.utt.data$age <- substring(speechrate.utt.data$filename, 1,2)
speechrate.utt.data$count <- 1
mean_speechrate <- aggregate(speechrate.utt.data$rate, by = c(list(child = speechrate.utt.data$child),list(age=speechrate.utt.data$age)),FUN=mean)
sd_speechrate <- aggregate(speechrate.utt.data$rate, by = c(list(child = speechrate.utt.data$child),list(age=speechrate.utt.data$age)),FUN=sd)
mean_speechrate_noF0prune <- aggregate(speechrate.utt.data$rate_noF0prune, by = c(list(child = speechrate.utt.data$child),list(age=speechrate.utt.data$age)),FUN=mean)
sd_speechrate_noF0prune <- aggregate(speechrate.utt.data$rate_noF0prune, by = c(list(child = speechrate.utt.data$child),list(age=speechrate.utt.data$age)),FUN=sd)
num_utterances <- aggregate(speechrate.utt.data$count, by = c(list(child = speechrate.utt.data$child),list(age=speechrate.utt.data$age)),FUN=sum)
speechrate.data <- merge(mean_speechrate, sd_speechrate,by=c("child","age"))
speechrate.data <- merge(speechrate.data,mean_speechrate_noF0prune,by=c("child","age"))
speechrate.data <- merge(speechrate.data,sd_speechrate_noF0prune,by=c("child","age"))
speechrate.data <- merge(speechrate.data,num_utterances,by=c("child","age"))
colnames(speechrate.data) <- c("child","age","mean","sd","mean_noF0prune","sd_noF0prune","num_utt")
#Preprocess: Identify and remove all children for which we don't have all 3 data points, or for which
#we don't have at least 10 utterances in each data point
for (c in c(1:56)){
# Adjusting participant numbers
if (c < 10){
i <- paste("0",toString(c), sep = '')
}else{
i <- c
}
temp <-speechrate.data[speechrate.data$child == i,1:7]
n_datapoints <- nrow(temp)
num_utterances <- speechrate.data$num_utt[speechrate.data$child == i]
if (any(num_utterances<10) | n_datapoints < 3){
print("remove")
print(i)
speechrate.data <- subset(speechrate.data, child != i)
speechrate.utt.data <- subset(speechrate.utt.data, child != i)
}
}
## Add in CDI data here
CDI.files <- list.files(path=data.path, pattern="scores.csv")
# Format data into dataframe-format
CDI.all.data <- do.call("rbind", lapply(CDI.files, function(x) read.csv(paste(data.path,x, sep=''),
stringsAsFactors = FALSE)))
CDI.all.data$child <- c('01','02','03','04','05','06','07','08','09','10', '11','12', '13','14','15','16','17','18','19','20','21','22','23',
'24','25','26', '27', '28','29','30','31','32','33','34','35','36','37','38','39','40','41','42','43','44','45',
'46','47','48','49','50','51','52','53','54','55','56',NA,NA)
#Preprocess CDI data
CDI.data <- CDI.all.data[c(1,2,9,37,156:179,183,184)]
CDI.data$sibling <- ifelse(CDI.data$Broertjes.zusjes..bij.Prod08. != "" | CDI.data$Broertjes.zusjes..bij.Prod16. != '','True','False')
CDI.data$spraak8 <- ifelse(CDI.data$NCDI1RuweScoreProd8mnd > 0, "True", "False")
CDI.data$spraak12 <-ifelse(CDI.data$NCDI1RuweScoreProd12mnd > 0, "True", "False")
CDI.data$spraak16 <- ifelse(CDI.data$NCDI1RuweScoreProd16mnd > 0, "True", "False")
CDI.data$spraak <- ifelse(CDI.data$spraak8, "8", ifelse(CDI.data$spraak12, "12","16"))
CDI.data <- CDI.data[c(1,2,5:31,35)]
# Link CDI data to speech rate data
all.utt.data <- merge(CDI.data,speechrate.utt.data, by="child", all = FALSE)
all.data <- merge(CDI.data,speechrate.data, by="child", all = FALSE)
all.utt.data$NCDI1RuweScorePerc12mnd <- strtoi(all.utt.data$NCDI1RuweScorePerc12mnd)
all.utt.data$NCDI1RuweScoreProd12mnd <- strtoi(all.utt.data$NCDI1RuweScoreProd12mnd)
all.data$NCDI1RuweScorePerc12mnd <- strtoi(all.data$NCDI1RuweScorePerc12mnd)
all.data$NCDI1RuweScoreProd12mnd <- strtoi(all.data$NCDI1RuweScoreProd12mnd)
# Determine basic info about children
n_children <- length(unique(all.data$child))
n_sexe <- table(all.data$Geslacht)/3
n_segments <- nrow(speechrate.data)
### Speech rate data analysis
# Set working directory and output directory, and plot details
library("dplyr")
library("lme4")
library("ggplot2")
library(grid)
library(gridExtra)
library(stringr)
library(jtools)
library(lattice)
library(lmerTest)
library(yarrr)
library(Hmisc)
#Plot layout settings
basic.theme <- theme(
panel.background = element_rect(
fill = "transparent",colour = NA),
panel.grid.major = element_line(colour = "grey95"),
panel.grid.minor = element_blank(),
plot.background = element_rect(
fill = "transparent",colour = NA),
legend.background = element_rect(
fill="transparent"),
legend.text = element_text(size=24),
legend.title = element_text(size=30),
legend.key.height = unit(2, "lines"),
legend.key = element_rect(colour = NA, fill = NA),
axis.text.x = element_text(size=30, angle=45, hjust=1),
axis.title.x = element_text(size=30),
axis.text.y = element_text(size=28),
axis.title.y = element_text(size=32),
strip.text = element_text(size=30),
panel.spacing = unit(2, "lines"))
# Read in speech rate data from files
#"~/Downloads/"  C:/Users/ingroe/Downloads/
data.path <- "/Volumes/ladd/workspaces/ld-ingroe/projects/speechrate_roete/03-raw_data/04-spreadsheets/"
plot.path <- "/Volumes/ladd/workspaces/ld-ingroe/projects/speechrate_roete/04-analysis/"
speechrate.files <- list.files(path=data.path, pattern="results.csv")
# Format data into dataframe-format
speechrate.utt.data <- do.call("rbind", lapply(speechrate.files, function(x) read.csv(paste(data.path,x, sep=''),
stringsAsFactors = FALSE)))
# Compute speech rate per utterance, with and without F0-pruning
speechrate.utt.data$rate <- speechrate.utt.data$syllable_count / speechrate.utt.data$utt_duration
speechrate.utt.data$rate_noF0prune <- speechrate.utt.data$syllable_count_noF0prune / speechrate.utt.data$utt_duration
# Descriptive statistics over all utterances; average speech rate and sd, per child per age
speechrate.utt.data$child <- substring(speechrate.utt.data$filename, 4,5)
speechrate.utt.data$age <- substring(speechrate.utt.data$filename, 1,2)
speechrate.utt.data$count <- 1
mean_speechrate <- aggregate(speechrate.utt.data$rate, by = c(list(child = speechrate.utt.data$child),list(age=speechrate.utt.data$age)),FUN=mean)
sd_speechrate <- aggregate(speechrate.utt.data$rate, by = c(list(child = speechrate.utt.data$child),list(age=speechrate.utt.data$age)),FUN=sd)
mean_speechrate_noF0prune <- aggregate(speechrate.utt.data$rate_noF0prune, by = c(list(child = speechrate.utt.data$child),list(age=speechrate.utt.data$age)),FUN=mean)
sd_speechrate_noF0prune <- aggregate(speechrate.utt.data$rate_noF0prune, by = c(list(child = speechrate.utt.data$child),list(age=speechrate.utt.data$age)),FUN=sd)
num_utterances <- aggregate(speechrate.utt.data$count, by = c(list(child = speechrate.utt.data$child),list(age=speechrate.utt.data$age)),FUN=sum)
speechrate.data <- merge(mean_speechrate, sd_speechrate,by=c("child","age"))
speechrate.data <- merge(speechrate.data,mean_speechrate_noF0prune,by=c("child","age"))
speechrate.data <- merge(speechrate.data,sd_speechrate_noF0prune,by=c("child","age"))
speechrate.data <- merge(speechrate.data,num_utterances,by=c("child","age"))
colnames(speechrate.data) <- c("child","age","mean","sd","mean_noF0prune","sd_noF0prune","num_utt")
n_children <- length(unique(speechrate.data$child))
n_children
n_segments <- nrow(speechrate.data)
n_segments
#Preprocess: Identify and remove all children for which we don't have all 3 data points, or for which
#we don't have at least 10 utterances in each data point
for (c in c(1:56)){
# Adjusting participant numbers
if (c < 10){
i <- paste("0",toString(c), sep = '')
}else{
i <- c
}
temp <-speechrate.data[speechrate.data$child == i,1:7]
n_datapoints <- nrow(temp)
num_utterances <- speechrate.data$num_utt[speechrate.data$child == i]
if (any(num_utterances<10) | n_datapoints < 3){
print("remove")
print(i)
speechrate.data <- subset(speechrate.data, child != i)
speechrate.utt.data <- subset(speechrate.utt.data, child != i)
}
}
n_segments <- nrow(speechrate.data)
n_children
n_children <- length(unique(speechrate.data$child))
n_children
n_segments <- nrow(speechrate.data)
n_segments
library(readr)
c_corpusProvidence_childAlex_age2_0_productiontask_modified <- read_csv("/Volumes/ladd/workspaces/ld-ingroe/projects/modeling_roete/03-raw_data/03-analysis_scripts/CBL-master/results/skipped/c_corpusProvidence_childAlex_age2_0_productiontask-modified.csv")
View(c_corpusProvidence_childAlex_age2_0_productiontask_modified)
-0.03390155 < -0.001389854
library(readr)
l_corpusProvidence_childViolet_age4_0_productiontask_modified <- read_csv("/Volumes/ladd/workspaces/ld-ingroe/projects/modeling_roete/03-raw_data/03-analysis_scripts/CBL-master/results/skipped/l_corpusProvidence_childViolet_age4_0_productiontask-modified.csv")
View(l_corpusProvidence_childViolet_age4_0_productiontask_modified)
library(readr)
l_corpusProvidence_childNaima_age3_0_productiontask_keep_all_modified <- read_csv("/Volumes/ladd/workspaces/ld-ingroe/projects/modeling_roete/03-raw_data/03-analysis_scripts/CBL-master/results/not_skipped/l_corpusProvidence_childNaima_age3_0_productiontask_keep_all-modified.csv")
View(l_corpusProvidence_childNaima_age3_0_productiontask_keep_all_modified)
-8.368250e-03 > -1.053605e-01
-2.755732e-07 > -5.511465e-07
-2.087676e-09 > -4.175351e-09
-2.755732e-07 > -1.102293e-06
#Loading packages and setting paths
library(ggplot2)
library(lme4)
library(grid)
library(gridExtra)
library(stringr)
library(jtools)
library(lattice)
#Plot layout settings
basic.theme <- theme(
panel.background = element_rect(
fill = "transparent",colour = NA),
panel.grid.major = element_line(colour = "grey95"),
panel.grid.minor = element_blank(),
plot.background = element_rect(
fill = "transparent",colour = NA),
legend.background = element_rect(
fill="transparent"),
legend.text = element_text(size=24),
legend.title = element_text(size=30),
legend.key.height = unit(2, "lines"),
legend.key = element_rect(colour = NA, fill = NA),
axis.text.x = element_text(size=30, angle=45, hjust=1),
axis.title.x = element_text(size=30),
axis.text.y = element_text(size=28),
axis.title.y = element_text(size=32),
strip.text = element_text(size=30),
panel.spacing = unit(2, "lines"))
#load the child utterance data
setwd("/Volumes/ladd/workspaces/ld-ingroe/projects/modeling_roete/03-analysis_scripts/CBL-master/localsampledcorpus/childcopy"
plot.path <- "/Volumes/ladd/workspaces/ld-ingroe/projects/modeling_roete/04-analysis/paper/results/localsampledcorpus/"
setwd("/Volumes/ladd/workspaces/ld-ingroe/projects/modeling_roete/03-analysis_scripts/CBL-master/localsampledcorpus/childcopy/"
)
setwd("/Volumes/ladd/workspaces/ld-ingroe/projects/modeling_roete/03-analysis_scripts/CBL-master/localsampledcorpus/childcopy/")
plot.path <- "/Volumes/ladd/workspaces/ld-ingroe/projects/modeling_roete/04-analysis/paper/results/localsampledcorpus/"
#load the child utterance data
setwd("/Volumes/ladd/workspaces/ld-ingroe/projects/modeling_roete/03-raw_data/03-analysis_scripts/CBL-master/localsampledcorpus/childcopy/")
plot.path <- "/Volumes/ladd/workspaces/ld-ingroe/projects/modeling_roete/04-analysis/paper/results/localsampledcorpus/"
filenames <- list.files(pattern="*.txt")
#open file and extract child name and age
filenames <- list.files(pattern="*.txt")
data.list <- lapply(filenames,read.delim)
data <- do.call(rbind, data.list)
filenames <- list.files(pattern="*.txt")
for (file in filenames){
data <- read.delim(file)
}
View(data)
for (file in filenames){
data <- read.delim(file)
child <- file
age <- file
}
filenames <- list.files(pattern="*.txt")
for (file in filenames){
data <- read.delim(file)
child <- strsplit(file, "age")
age <- file
}
child
for (file in filenames){
data <- read.delim(file)
child <- strsplit(file, "_age")
age <- file
}
child[2]
child[][2]
child[1]
child[1][2]
child[1][1]
child[]
child[[]]
unlist(child)
unlist(child)[1]
filenames <- list.files(pattern="*.txt")
for (file in filenames){
data <- read.delim(file)
child <- unlist(strsplit(file, "_age"))[1]
age <- unlist(strsplit(file, "_age"))[2]
}
child <- unlist(strsplit(child,"child"))
child[2]
age
age <- unlist(strsplit(age,".txt"))
age
for (file in filenames){
data <- read.delim(file)
child <- unlist(strsplit(unlist(strsplit(file, "_age"))[1],"child"))[2]
age <- unlist(strsplit(unlist(strsplit(file, "_age"))[2],".txt"))
}
filenames <- list.files(pattern="*.txt")
for (file in filenames){
data <- read.delim(file)
child <- unlist(strsplit(unlist(strsplit(file, "_age"))[1],"child"))[2]
age <- unlist(strsplit(unlist(strsplit(file, "_age"))[2],".txt"))
colnames(data) <- c("utterance")
}
for (file in filenames){
data <- read.delim(file)
child <- unlist(strsplit(unlist(strsplit(file, "_age"))[1],"child"))[2]
age <- unlist(strsplit(unlist(strsplit(file, "_age"))[2],".txt"))
colnames(data) <- c("utterance")
data$child <- unlist(strsplit(unlist(strsplit(file, "_age"))[1],"child"))[2]
}
for (file in filenames){
data <- read.delim(file)
child <- unlist(strsplit(unlist(strsplit(file, "_age"))[1],"child"))[2]
age <- unlist(strsplit(unlist(strsplit(file, "_age"))[2],".txt"))
colnames(data) <- c("utterance")
data$child <- unlist(strsplit(unlist(strsplit(file, "_age"))[1],"child"))[2]
data$age <- unlist(strsplit(unlist(strsplit(file, "_age"))[2],".txt"))
}
filenames <- list.files(pattern="*.txt")
data <- NULL
for (file in filenames){
temp.data <- read.delim(file)
colnames(temp.data) <- c("utterance")
temp.data$child <- unlist(strsplit(unlist(strsplit(file, "_age"))[1],"child"))[2]
temp.data$age <- unlist(strsplit(unlist(strsplit(file, "_age"))[2],".txt"))
data <- rbind(data,temp.data)
}
#converting age variable to numeric values and months into years
data$age <- gsub("_", ".", data$age)
data$age <- gsub("6", "5", data$age)
data$age <- as.numeric(data$age)
data$numwords <- data$numwords <- str_count(data$bow," ")
data$numwords <- data$numwords <- str_count(data$utterance," ")
plotdata_local_uttlength <- aggregate(data$numwords, by = c(list(age=data$age)),FUN=sum)
colnames(plotdata_local_uttlength)[2] <- "total_uttlength"
plotdata_temp <- aggregate(data$numwords, by = c(list(age=data$age)), FUN = function(x){NROW(x)})
colnames(plotdata_temp)[2] <- "total_num_utterances"
View(plotdata_local_uttlength)
View(plotdata_temp)
plotdata_local_uttlength <- merge(plotdata_local_uttlength,plotdata_temp, by = c("age"))
plotdata_local_uttlength$averagelength <- (plotdata_local_uttlength$total_uttlength/plotdata_temp$total_num_utterances)
plot.local.uttlength <- ggplot(plotdata_local_uttlength,
aes(x=age, y = averagelength)) +
geom_line(size = 1.5) + basic.theme + theme(axis.text.x = element_text(size=22)) +
#coord_cartesian(ylim=(c(0,100))) +
xlab("\nAge (years)") +
ylab("Average number of words \n in child utterance\n") +
#ggtitle("Local sampling") +
basic.theme + theme(axis.text.x = element_text(size=22)) +
theme(plot.title = element_text(size=32, face = "bold.italic", hjust = 0.5, margin=margin(b = 30, unit = "pt")))
#Save plot
png(paste(plot.path,
"plotlocaluttlength.png", sep=""),
width=900,height=500,units="px",
bg = "transparent")
plot.local.uttlength+theme_apa()
dev.off()
plot.local.uttlength+theme_apa()
setwd("/Volumes/ladd/workspaces/ld-ingroe/projects/modeling_roete/03-raw_data/03-analysis_scripts/CBL-master/cumulativesampledcorpus/childcopy/")
plot.path <- "/Volumes/ladd/workspaces/ld-ingroe/projects/modeling_roete/04-analysis/paper/results/cumulativesampledcorpus/"
#open file and extract child name and age
filenames <- list.files(pattern="*.txt")
filenames
data <- NULL
for (file in filenames){
temp.data <- read.delim(file)
colnames(temp.data) <- c("utterance")
temp.data$child <- unlist(strsplit(unlist(strsplit(file, "_age"))[1],"child"))[2]
temp.data$age <- unlist(strsplit(unlist(strsplit(file, "_age"))[2],".txt"))
data <- rbind(data,temp.data)
}
#converting age variable to numeric values and months into years
data$age <- gsub("_", ".", data$age)
data$age <- gsub("6", "5", data$age)
data$age <- as.numeric(data$age)
data$numwords <- data$numwords <- str_count(data$utterance," ")
#plot
##Make plot: x-axis: age, y-axis: utterance length in words, collapsed over all children
plotdata_cumu_uttlength <- aggregate(data$numwords, by = c(list(age=data$age)),FUN=sum)
colnames(plotdata_cumu_uttlength)[2] <- "total_uttlength"
plotdata_temp <- aggregate(data$numwords, by = c(list(age=data$age)), FUN = function(x){NROW(x)})
colnames(plotdata_temp)[2] <- "total_num_utterances"
plotdata_cumu_uttlength <- merge(plotdata_cumu_uttlength,plotdata_temp, by = c("age"))
plotdata_cumu_uttlength$averagelength <- (plotdata_cumu_uttlength$total_uttlength/plotdata_temp$total_num_utterances)
plot.cumu.uttlength <- ggplot(plotdata_cumu_uttlength,
aes(x=age, y = averagelength)) +
geom_line(size = 1.5) + basic.theme + theme(axis.text.x = element_text(size=22)) +
#coord_cartesian(ylim=(c(0,100))) +
xlab("\nAge (years)") +
ylab("Average number of words \n in child utterance\n") +
#ggtitle("Local sampling") +
basic.theme + theme(axis.text.x = element_text(size=22)) +
theme(plot.title = element_text(size=32, face = "bold.italic", hjust = 0.5, margin=margin(b = 30, unit = "pt")))
#Save plot
png(paste(plot.path,
"plotcumuuttlength.png", sep=""),
width=900,height=500,units="px",
bg = "transparent")
plot.cumu.uttlength+theme_apa()
dev.off()
plot.cumu.uttlength+theme_apa()
plot.path <- "/Volumes/ladd/workspaces/ld-ingroe/projects/modeling_roete/04-analysis/paper/results/accumulativesampledcorpus/"
plot.cumu.uttlength <- ggplot(plotdata_cumu_uttlength,
aes(x=age, y = averagelength)) +
geom_line(size = 1.5) + basic.theme + theme(axis.text.x = element_text(size=22)) +
#coord_cartesian(ylim=(c(0,100))) +
xlab("\nAge (years)") +
ylab("Average number of words \n in child utterance\n") +
#ggtitle("Local sampling") +
basic.theme + theme(axis.text.x = element_text(size=22)) +
theme(plot.title = element_text(size=32, face = "bold.italic", hjust = 0.5, margin=margin(b = 30, unit = "pt")))
#Save plot
png(paste(plot.path,
"plotcumuuttlength.png", sep=""),
width=900,height=500,units="px",
bg = "transparent")
plot.cumu.uttlength+theme_apa()
dev.off()
plot.cumu.uttlength+theme_apa()
plot.both.uttlength <- ggplot() +
geom_line(data = plotdata_local_uttlength, aes(x=age, y = averagelength, color = "local")) +
geom_line(data = plotdata_cumu_uttlength, aes(x=age, y = averagelength, color = "cumulative")) +
geom_line(size = 1.5) + basic.theme + theme(axis.text.x = element_text(size=22)) +
#scale_colour_manual(name = "Child:", values = groupcolours) +
coord_cartesian(ylim=(c(0,10))) +
xlab("\nAge (years)") +
ylab("Average number of words \n in child utterance\n") +
ggtitle("Child utterance length") +
guides(color = guide_legend(reverse = TRUE)) +
basic.theme + theme(axis.text.x = element_text(size=22)) +
theme(plot.title = element_text(size=32, face = "bold.italic", hjust = 0.5, margin=margin(b = 30, unit = "pt")))
#Save plot
png(paste(plot.path,
"plotbothuttlength.png", sep=""),
width=900,height=500,units="px",
bg = "transparent")
plot.both.uttlength+theme_apa()
dev.off()
plot.both.uttlength+theme_apa()
