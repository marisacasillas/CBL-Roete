#!/usr/bin/env python2.7

from __future__ import division
import pandas as pd
import ast
import numpy as np
import os
import glob


def adjustscores(file):
    #read in csv-file and add new columns to dataframe
    print file
    df = pd.read_csv(file, delimiter=";", header='infer')
    df['repetition'] = 'NaN'
    df['correctedscore'] = 'NaN'
    df= df.drop(['controlledscore'], axis = 1)

    #for each utterance in the file
    for i in range(0,len(df)):

        # skip utterance for which no reconstruction attempt was done
        if df['skipped'][i]:
            continue

        #retrieve chunks from dataframe
        chunks = df['bow'][i]
        chunks = ast.literal_eval(chunks)

        #convert list of list of chunks into one single list : [['one'],['two','three']] -> ['one','two three ']
        list_of_chunks = []
        for chunk in chunks:
            #if it's a one-word chunk
            if len(chunk) == 1:
               list_of_chunks.append(chunk[0])
            else:
                reformatted_chunk = ''
                for word in chunk:
                    reformatted_chunk += word + ' '
                list_of_chunks.append(reformatted_chunk)

        # check for repetition of chunks within the utterance
        if len(set(list_of_chunks)) < len(list_of_chunks):
            df['repetition'][i] = True
            #TODO: this generates a warning: "A value is trying to be set on a copy of a slice from a DataFrame"
        else:
            df['repetition'][i] = False

        #compute chance-level reconstruction taking into account the number of repeated chunks
        list_of_factors = [list_of_chunks.count(j) for j in set(list_of_chunks)]
        #print list_of_factors
        chance = np.prod([np.math.factorial(j) for j in list_of_factors]) / np.math.factorial(len(list_of_chunks))
        #print chance
        df['chance'][i] = chance
        #print df['reconstructed'][i]

        if df['reconstructed'][i]:
            df['correctedscore'][i] = -np.math.log(chance)
        else:
            df['correctedscore'][i] = np.math.log(1 - chance)

    # write dataframe to new modified csv-file
    new_file = file.replace(".csv","-modified.csv")
    df.to_csv(new_file)
    return


if __name__ == "__main__":
    #define file locations
    #path = '/Volumes/ladd/workspaces/ld-ingroe/projects/modeling_roete/03-raw_data/03-analysis_scripts/CBL-master/results/skipped/'
    #path = '/Volumes/ladd/workspaces/ld-ingroe/projects/modeling_roete/03-raw_data/03-analysis_scripts/CBL-master/results/not_skipped/temp/'
    path = '/Volumes/ladd/workspaces/ld-ingroe/projects/modeling_roete/03-raw_data/03-analysis_scripts/CBL-Roete/model_output/'


    #list all files that need modifications
    extension = 'csv'
    os.chdir(path)
    files = [i for i in glob.glob('*.{}'.format(extension))]

    #files = ["c_corpusProvidence_childLily_age2_0_productiontask.csv"]
    #for all output-files generated by the model
    for file in files:
        adjustscores(file)

    print "Script finished"